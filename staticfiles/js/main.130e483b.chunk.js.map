{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","logo.svg","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Loader.js","components/Message.js","actions/productActions.js","screen/ProductScreen.js","components/Product.js","components/Paginate.js","components/ProductCarousel.js","screen/HomeScreen.js","actions/cartActions.js","screen/CartScreen.js","components/FormContainer.js","screen/LoginScreen.js","screen/RegisterScreen.js","screen/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screen/ShippingScreen.js","screen/PaymentScreen.js","screen/PlaceOrderScreen.js","screen/OrderScreen.js","screen/UserListScreen.js","screen/UserEditScreen.js","screen/ProductListScreen.js","screen/ProductEditScreen.js","screen/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","className","Control","name","onChange","target","value","variant","Button","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","src","Logo","width","height","alt","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Loader","Spinner","animation","role","margin","display","Message","children","Alert","listProducts","listProductDetails","ProductScreen","match","qty","setQty","rating","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","useEffect","params","md","Image","image","fluid","ListGroup","ratings","numReviews","price","description","Card","numInStock","xs","as","Array","keys","disabled","length","rev","createdAt","substring","_id","productId","review","post","Group","controlId","Label","row","cardImage","Product","Img","Body","Title","Text","Paginate","split","Pagination","active","ProductCarousel","Carousel","pause","Caption","HomeScreen","search","sm","lg","xl","addToCart","countInStock","setItem","stringify","CartScreen","Number","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","paginate","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setNumInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.130e483b.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducer, \r\n    productDetailsReducer, \r\n    productDeleteReducer, \r\n    productCreateReducer, \r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n\r\n} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport { userLoginReducer, \r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    deleteUserReducer,\r\n    userUpdateReducer,\r\n\r\n    } from './reducers/userReducers'\r\nimport { orderCreateReducer, \r\n    orderDetailsReducer, \r\n    orderPayReducer, \r\n    orderListMyReducer, \r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete : productDeleteReducer,\r\n    productCreate :productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    productReviewCreate:productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart : cartReducer,\r\n    userLogin :userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails : userDetailsReducer,\r\n    userUpdateProfile : userUpdateProfileReducer,\r\n    userList : userListReducer,\r\n    userDelete : deleteUserReducer,\r\n    userUpdate : userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails : orderDetailsReducer,\r\n    orderPay : orderPayReducer,\r\n    orderListMy : orderListMyReducer,\r\n    orderList : orderListReducer,        \r\n    orderDeliver : orderDeliverReducer,\r\n    \r\n})\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? \r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\n    //get the user information from storage, so it saves to their local storage\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \r\n    JSON.parse(localStorage.getItem('userInfo')) : null //in case cannot find user\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n//pass it into initial state\r\nconst initialState = {\r\n     cart: { \r\n        cartItems: cartItemFromStorage,\r\n        shippingAddress : shippingAddressFromStorage,\r\n    },\r\n     userLogin: { userInfo: userInfoFromStorage },\r\n     \r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer,initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import \r\n{\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    \r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n    PRODUCT_KEYBOARD_REQUEST,\r\n    PRODUCT_KEYBOARD_SUCCESS,\r\n    PRODUCT_KEYBOARD_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n//be careful with {products:[]}\r\nexport const productListReducer = (state={products:[]}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true, products: []}\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading:false, \r\n                products: action.payload.products, \r\n                page:action.payload.page, \r\n                pages:action.payload.pages \r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state \r\n    }\r\n}\r\n\r\n\r\n//be careful with {product:{revuews:[]}}\r\nexport const productDetailsReducer = (state={ product:{reviews:[]} }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state \r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n \r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUserReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_REQUEST,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const orderPayReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.9f751d1c.svg\";","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline className=\"d-flex\">\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n                variant='outline-dark'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-dark'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\nexport default SearchBox","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Navbar, Nav, Container, Row, NavDropdown, Form, FormControl,Button} from 'react-bootstrap'\r\nimport Logo from '../logo.svg';\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n\r\n    return (\r\n       <header>\r\n             <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n\r\n                    <LinkContainer to='/'>\r\n                    <Navbar.Brand>\r\n                    <img src={Logo}\r\n                     width=\"30\"\r\n                     height=\"30\"\r\n                     className=\"d-inline-block align-top\"\r\n                      alt=\"Logo\" \r\n                     \r\n                      /> shop online\r\n                       </Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                      \r\n                    <SearchBox/>\r\n\r\n                    {/* <Nav className=\"ml-auto\">\r\n\r\n                      \r\n                        <Nav.Link>NEW</Nav.Link>                                        \r\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                        <LinkContainer to='/'>\r\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to='/'>\r\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to='/'>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>                   \r\n                        </LinkContainer>\r\n                        </NavDropdown>                \r\n                       \r\n\r\n                    </Nav> */}\r\n                    <Nav className=\"ms-auto \" >\r\n\r\n                    <LinkContainer to='/cart'>\r\n                    <Nav.Link ><i className=\"fas fa-shopping-cart\" > </i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {userInfo ? (\r\n                        <NavDropdown title={userInfo.name} id='username'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                            </LinkContainer>\r\n\r\n                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                 ) : (\r\n                         <LinkContainer to='/login'>\r\n                             <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                         </LinkContainer>\r\n                     )}\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>   \r\n\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>  \r\n\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>  \r\n\r\n                            </NavDropdown>             \r\n                        )}\r\n                       \r\n                      \r\n\r\n                    {/* <Form className=\"d-flex \">\r\n                        <FormControl\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        className=\"me-2\"\r\n                        aria-label=\"Search\"\r\n                        />\r\n                        <Button variant=\"outline-dark\" size=\"sm\"><i className=\"fas fa-search\"> </i></Button>\r\n                    </Form> */}\r\n\r\n                   </Nav>\r\n                  \r\n                    </Navbar.Collapse>\r\n                </Container>\r\n        </Navbar>\r\n       </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; ML ProShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value,text,color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                {text && text}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n        animation = 'border'\r\n        role='status'\r\n        style={{\r\n            height: '100px',  \r\n            width: '100px',\r\n            margin: 'auto',\r\n            display : 'block' \r\n        }}>\r\n        <span className ='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n    PRODUCT_KEYBOARD_REQUEST,\r\n    PRODUCT_KEYBOARD_SUCCESS,\r\n    PRODUCT_KEYBOARD_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) =>{\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) =>{\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        \r\n        if (successProductReview) {    //reset       \r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //console.log('rating ' + rating)\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.ratings} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.numInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.numInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Quantity</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form\r\n                                                                type='control'\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.numInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item className=\"d-grid gap-2\">\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.numInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <br/><br/>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((rev) => (\r\n                                            <ListGroup.Item key={rev._id}>\r\n                                                <strong>{rev.name}</strong>\r\n                                                <Rating value={rev.rating} color='#f8e825' />\r\n                                                <p>{rev.createdAt.substring(0, 10)}</p>\r\n                                                <p>{rev.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <br/>\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import React from 'react'\r\nimport {Card} from 'react-bootstrap'\r\nimport Rating from './Rating';\r\nimport {Link} from 'react-router-dom'\r\nconst style = {\r\n\r\n    cardImage:{\r\n        // width: 'vw',\r\n        // height: 'vh'\r\n    }\r\n};\r\n\r\nfunction Product({product}) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} style={style.cardImage}/>\r\n            </Link>\r\n\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as=\"div\">\r\n                    <strong>{product.name}</strong>\r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                    \r\n                    <Rating value={product.ratings} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                </div>\r\n            </Card.Text>\r\n\r\n            <Card.Text as=\"h3\">\r\n                ${product.price}\r\n            </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    var sectionStyle = {\r\n        width: \"100%\",\r\n        height: \"400px\",\r\n        backgroundImage: \"url(https://unsplash.com/photos/tqu0IOMaiU8)\"\r\n      };\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark' >\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts, keyboardProductList } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    \r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n\r\n\r\n    let keyword = history.location.search\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <br/>\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n\r\n            <br/><br/>\r\n            \r\n           \r\n        </div>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default HomeScreen","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart, removeFromCart} from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen({match, location, history}) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    console.log(cartItems)\r\n\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    \r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                <hr/>\r\n                {cartItems.length === 0 ? (\r\n                     <Message variant='info'>\r\n                       Your cart is empty <Link to='/'>Go Back</Link> \r\n                     </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n\r\n                                <Col md={2}>\r\n                                    ${item.price}\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                <Form.Control\r\n                                    as=\"select\"              \r\n                                    value={item.qty}\r\n                                    onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                    >\r\n                                        {\r\n                                            [...Array(item.numInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n                                </Form.Control>\r\n                                </Col>\r\n\r\n                                <Col md={1}>\r\n                                        <Button\r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={()=> removeFromCartHandler(item.product)}\r\n                                        >\r\n                                        <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                </Col>\r\n\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )\r\n            \r\n            }\r\n            </Col> \r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>Subtotal: ({cartItems.reduce((acc,item)=> acc+item.qty, 0)}) items</h3>\r\n                        $({cartItems.reduce((acc,item)=> acc + item.qty * item.price, 0).toFixed(2) })\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n                <ListGroup.Item className=\"d-grid gap-2\">\r\n                    <Button\r\n                        type='button'\r\n                        className='btn-block'\r\n                        disabled={cartItems.length ===0}\r\n                        onClick={checkoutHandler}\r\n                    >\r\n                        Proceed To Checkout\r\n                    </Button>\r\n                </ListGroup.Item>\r\n                </Card>\r\n            </Col>            \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'//plit by = and give the 2nd index\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n    \r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n                {loading && <Loader/>}\r\n                \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address </Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                <br/>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({location, history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'//plit by = and give the 2nd index\r\n    \r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n    \r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match. Please try again.')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            \r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <br/>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap'\r\nimport {LinkContainer } from 'react-router-bootstrap' \r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\nimport {listMyOrders} from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match. Please try again.')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id' : user._id,\r\n                'name' : name,\r\n                'email' : email,\r\n                'password' : password\r\n            }))\r\n            setMessage('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address </Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control                           \r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <br/>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n            </Col>\r\n\r\n            <Col md={9}> \r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_REQUEST,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nimport {CART_CLEAR_ITEMS} from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className= 'justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )             \r\n                }                     \r\n            </Nav.Item>  \r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )             \r\n                }                     \r\n            </Nav.Item>  \r\n\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )             \r\n                }                     \r\n            </Nav.Item>  \r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )             \r\n                }                     \r\n            </Nav.Item>  \r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <br/>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({history, }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n\r\n    }\r\n   \r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <Form.Label as='legend'> Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>    \r\n                <br/>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item className=\"d-grid gap-2\">\r\n                                        <Button            \r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table, Button } from 'react-bootstrap'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {listUsers, deleteUser } from '../actions/userActions'\r\n\r\n\r\nfunction UserListScreen({history}) {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = userDelete\r\n\r\n    useEffect(()=>{\r\n   \r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }\r\n        else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user?'))\r\n        dispatch(deleteUser(id))\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            {/* Button wrap in a button */}\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <br/>\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n                            <br/>\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table, Button, Row, Col } from 'react-bootstrap'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport {listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({history, match}) {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page, paginate } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user?'))\r\n         dispatch(deleteProduct(id))     \r\n    } \r\n\r\n    const createProductHandler = () => {\r\n       dispatch(createProduct())\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [numInStock, setNumInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setNumInStock(product.numInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            numInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n      \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='formFile'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.Control\r\n                                    type=\"file\"\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.Control>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='numinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={numInStock}\r\n                                    onChange={(e) => setNumInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap';\nimport {HashRouter as Router, Route} from 'react-router-dom'\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ProductScreen from './screen/ProductScreen'\nimport HomeScreen from './screen/HomeScreen';\nimport CartScreen from './screen/CartScreen';\nimport LoginScreen from './screen/LoginScreen';\nimport RegisterScreen from './screen/RegisterScreen';\nimport ProfileScreen from './screen/ProfileScreen';\nimport ShippingScreen from './screen/ShippingScreen';\nimport PaymentScreen from './screen/PaymentScreen'\nimport PlaceOrderScreen from './screen/PlaceOrderScreen'\nimport OrderScreen from './screen/OrderScreen'\nimport UserListScreen from './screen/UserListScreen'\nimport UserEditScreen from './screen/UserEditScreen'\nimport ProductListScreen from './screen/ProductListScreen'\nimport ProductEditScreen from './screen/ProductEditScreen'\nimport OrderListScreen from './screen/OrderListScreen'\n\nfunction App() {\n  return (\n   <Router>\n     <Header/>\n     <main className =\"py-3\">\n       <Container>\n        <Route path='/' component={HomeScreen} exact/>\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/profile' component={ProfileScreen} />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/placeorder' component={PlaceOrderScreen} />\n        <Route path='/order/:id' component={OrderScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/product/:id' component={ProductScreen}/>\n        <Route path='/cart/:id?' component={CartScreen}/>\n\n        \n        <Route path='/admin/userlist' component={UserListScreen}/>\n        <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\n        <Route path='/admin/productlist' component={ProductListScreen}/>\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen}/>\n        <Route path='/admin/orderlist' component={OrderListScreen}/>\n       </Container>\n    </main>\n     <Footer/>\n     </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}